// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhilarDataApp.Models;

namespace PhilarDataApp.Migrations
{
    [DbContext(typeof(ConcertDbContext))]
    partial class ConcertDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("PhilarDataApp.Models.Concert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcertVenue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Conductor")
                        .HasColumnType("TEXT");

                    b.Property<int>("CountCameras")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfThe")
                        .HasColumnType("TEXT");

                    b.Property<string>("MusicalCompositions")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<string>("Performer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Soloist")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sound")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Concerts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcertVenue = "САТ им. П.Ойунского",
                            Conductor = "Ф. Мастранджело",
                            CountCameras = 2,
                            DateOfThe = new DateTime(2012, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Note = "",
                            Performer = "Симфонический оркестр",
                            Soloist = "",
                            Sound = "",
                            Title = "Концерт – премьера симфонического оркестра филармонии Якутии"
                        },
                        new
                        {
                            Id = 2,
                            ConcertVenue = "ДДН им. А. Кулаковского",
                            Conductor = "Ф. Мастранджело",
                            CountCameras = 2,
                            DateOfThe = new DateTime(2012, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Note = "",
                            Performer = "Симфонический оркестр",
                            Soloist = "Иван Почекин",
                            Sound = "",
                            Title = "Концерт – проект большого симфонического оркестра филармонии Якутии"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
